//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HMS.AppData
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class HMSEntities : DbContext
    {
        public HMSEntities()
            : base("name=HMSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<CLIENT_INFORMATION> CLIENT_INFORMATION { get; set; }
        public DbSet<PAYMENT_INFORMATION> PAYMENT_INFORMATION { get; set; }
        public DbSet<RESERVATION_INFORMATION> RESERVATION_INFORMATION { get; set; }
        public DbSet<ROOM_DETAILS> ROOM_DETAILS { get; set; }
        public DbSet<ROOM_INFORMATION> ROOM_INFORMATION { get; set; }
        public DbSet<sysdiagrams> sysdiagrams { get; set; }
        public DbSet<vw_display_room_details> vw_display_room_details { get; set; }
    
        public virtual int InsertRoomDetails(string roomType, byte[] roomPhoto, string roomDetails, Nullable<double> roomPrice, Nullable<int> roomDiscount)
        {
            var roomTypeParameter = roomType != null ?
                new ObjectParameter("roomType", roomType) :
                new ObjectParameter("roomType", typeof(string));
    
            var roomPhotoParameter = roomPhoto != null ?
                new ObjectParameter("roomPhoto", roomPhoto) :
                new ObjectParameter("roomPhoto", typeof(byte[]));
    
            var roomDetailsParameter = roomDetails != null ?
                new ObjectParameter("roomDetails", roomDetails) :
                new ObjectParameter("roomDetails", typeof(string));
    
            var roomPriceParameter = roomPrice.HasValue ?
                new ObjectParameter("roomPrice", roomPrice) :
                new ObjectParameter("roomPrice", typeof(double));
    
            var roomDiscountParameter = roomDiscount.HasValue ?
                new ObjectParameter("roomDiscount", roomDiscount) :
                new ObjectParameter("roomDiscount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertRoomDetails", roomTypeParameter, roomPhotoParameter, roomDetailsParameter, roomPriceParameter, roomDiscountParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int sp_insert_room_details(Nullable<int> roomID, string roomType, byte[] roomPhoto, string roomDetails, Nullable<double> roomPrice, Nullable<int> roomDiscount)
        {
            var roomIDParameter = roomID.HasValue ?
                new ObjectParameter("roomID", roomID) :
                new ObjectParameter("roomID", typeof(int));
    
            var roomTypeParameter = roomType != null ?
                new ObjectParameter("roomType", roomType) :
                new ObjectParameter("roomType", typeof(string));
    
            var roomPhotoParameter = roomPhoto != null ?
                new ObjectParameter("roomPhoto", roomPhoto) :
                new ObjectParameter("roomPhoto", typeof(byte[]));
    
            var roomDetailsParameter = roomDetails != null ?
                new ObjectParameter("roomDetails", roomDetails) :
                new ObjectParameter("roomDetails", typeof(string));
    
            var roomPriceParameter = roomPrice.HasValue ?
                new ObjectParameter("roomPrice", roomPrice) :
                new ObjectParameter("roomPrice", typeof(double));
    
            var roomDiscountParameter = roomDiscount.HasValue ?
                new ObjectParameter("roomDiscount", roomDiscount) :
                new ObjectParameter("roomDiscount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_room_details", roomIDParameter, roomTypeParameter, roomPhotoParameter, roomDetailsParameter, roomPriceParameter, roomDiscountParameter);
        }
    
        public virtual ObjectResult<byte[]> sp_display_roomdetails_byindex(Nullable<int> index)
        {
            var indexParameter = index.HasValue ?
                new ObjectParameter("index", index) :
                new ObjectParameter("index", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("sp_display_roomdetails_byindex", indexParameter);
        }
    
        public virtual ObjectResult<byte[]> sp_display_roomPhoto_byIndex(Nullable<int> index)
        {
            var indexParameter = index.HasValue ?
                new ObjectParameter("index", index) :
                new ObjectParameter("index", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("sp_display_roomPhoto_byIndex", indexParameter);
        }
    
        public virtual ObjectResult<byte[]> sp_getRoomPhoto_byIndex(Nullable<int> index)
        {
            var indexParameter = index.HasValue ?
                new ObjectParameter("index", index) :
                new ObjectParameter("index", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("sp_getRoomPhoto_byIndex", indexParameter);
        }
    
        public virtual ObjectResult<sp_get_room_details__by_index_Result> sp_get_room_details__by_index(Nullable<int> index)
        {
            var indexParameter = index.HasValue ?
                new ObjectParameter("index", index) :
                new ObjectParameter("index", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_room_details__by_index_Result>("sp_get_room_details__by_index", indexParameter);
        }
    
        public virtual ObjectResult<byte[]> sp_get_room_photo_by_index(Nullable<int> index)
        {
            var indexParameter = index.HasValue ?
                new ObjectParameter("index", index) :
                new ObjectParameter("index", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("sp_get_room_photo_by_index", indexParameter);
        }
    
        public virtual int sp_delete_room_details(Nullable<int> roomID)
        {
            var roomIDParameter = roomID.HasValue ?
                new ObjectParameter("roomID", roomID) :
                new ObjectParameter("roomID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_room_details", roomIDParameter);
        }
    
        public virtual int sp_update_room_details(Nullable<int> roomID, byte[] roomPhoto, string roomType, string roomDetails, Nullable<double> roomPrice, Nullable<int> roomDiscount)
        {
            var roomIDParameter = roomID.HasValue ?
                new ObjectParameter("roomID", roomID) :
                new ObjectParameter("roomID", typeof(int));
    
            var roomPhotoParameter = roomPhoto != null ?
                new ObjectParameter("roomPhoto", roomPhoto) :
                new ObjectParameter("roomPhoto", typeof(byte[]));
    
            var roomTypeParameter = roomType != null ?
                new ObjectParameter("roomType", roomType) :
                new ObjectParameter("roomType", typeof(string));
    
            var roomDetailsParameter = roomDetails != null ?
                new ObjectParameter("roomDetails", roomDetails) :
                new ObjectParameter("roomDetails", typeof(string));
    
            var roomPriceParameter = roomPrice.HasValue ?
                new ObjectParameter("roomPrice", roomPrice) :
                new ObjectParameter("roomPrice", typeof(double));
    
            var roomDiscountParameter = roomDiscount.HasValue ?
                new ObjectParameter("roomDiscount", roomDiscount) :
                new ObjectParameter("roomDiscount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_room_details", roomIDParameter, roomPhotoParameter, roomTypeParameter, roomDetailsParameter, roomPriceParameter, roomDiscountParameter);
        }
    
        public virtual int sp_update_room_details_nophoto(Nullable<int> roomID, string roomType, string roomDetails, Nullable<double> roomPrice, Nullable<int> roomDiscount)
        {
            var roomIDParameter = roomID.HasValue ?
                new ObjectParameter("roomID", roomID) :
                new ObjectParameter("roomID", typeof(int));
    
            var roomTypeParameter = roomType != null ?
                new ObjectParameter("roomType", roomType) :
                new ObjectParameter("roomType", typeof(string));
    
            var roomDetailsParameter = roomDetails != null ?
                new ObjectParameter("roomDetails", roomDetails) :
                new ObjectParameter("roomDetails", typeof(string));
    
            var roomPriceParameter = roomPrice.HasValue ?
                new ObjectParameter("roomPrice", roomPrice) :
                new ObjectParameter("roomPrice", typeof(double));
    
            var roomDiscountParameter = roomDiscount.HasValue ?
                new ObjectParameter("roomDiscount", roomDiscount) :
                new ObjectParameter("roomDiscount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_room_details_nophoto", roomIDParameter, roomTypeParameter, roomDetailsParameter, roomPriceParameter, roomDiscountParameter);
        }
    
        public virtual int sp_update_room_details_withphoto(Nullable<int> roomID, byte[] roomPhoto, string roomType, string roomDetails, Nullable<double> roomPrice, Nullable<int> roomDiscount)
        {
            var roomIDParameter = roomID.HasValue ?
                new ObjectParameter("roomID", roomID) :
                new ObjectParameter("roomID", typeof(int));
    
            var roomPhotoParameter = roomPhoto != null ?
                new ObjectParameter("roomPhoto", roomPhoto) :
                new ObjectParameter("roomPhoto", typeof(byte[]));
    
            var roomTypeParameter = roomType != null ?
                new ObjectParameter("roomType", roomType) :
                new ObjectParameter("roomType", typeof(string));
    
            var roomDetailsParameter = roomDetails != null ?
                new ObjectParameter("roomDetails", roomDetails) :
                new ObjectParameter("roomDetails", typeof(string));
    
            var roomPriceParameter = roomPrice.HasValue ?
                new ObjectParameter("roomPrice", roomPrice) :
                new ObjectParameter("roomPrice", typeof(double));
    
            var roomDiscountParameter = roomDiscount.HasValue ?
                new ObjectParameter("roomDiscount", roomDiscount) :
                new ObjectParameter("roomDiscount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_room_details_withphoto", roomIDParameter, roomPhotoParameter, roomTypeParameter, roomDetailsParameter, roomPriceParameter, roomDiscountParameter);
        }
    
        public virtual int sp_insert_client_history(string fname, string pnumber, string address, Nullable<System.DateTime> dateIn, Nullable<System.DateTime> dateOut, string rType)
        {
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var pnumberParameter = pnumber != null ?
                new ObjectParameter("pnumber", pnumber) :
                new ObjectParameter("pnumber", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var dateInParameter = dateIn.HasValue ?
                new ObjectParameter("dateIn", dateIn) :
                new ObjectParameter("dateIn", typeof(System.DateTime));
    
            var dateOutParameter = dateOut.HasValue ?
                new ObjectParameter("dateOut", dateOut) :
                new ObjectParameter("dateOut", typeof(System.DateTime));
    
            var rTypeParameter = rType != null ?
                new ObjectParameter("rType", rType) :
                new ObjectParameter("rType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_client_history", fnameParameter, pnumberParameter, addressParameter, dateInParameter, dateOutParameter, rTypeParameter);
        }
    
        public virtual int sp_insert_client_info(string clientfName, string clientLname, string clientEmail, string clientPhone, string clientAddress)
        {
            var clientfNameParameter = clientfName != null ?
                new ObjectParameter("clientfName", clientfName) :
                new ObjectParameter("clientfName", typeof(string));
    
            var clientLnameParameter = clientLname != null ?
                new ObjectParameter("clientLname", clientLname) :
                new ObjectParameter("clientLname", typeof(string));
    
            var clientEmailParameter = clientEmail != null ?
                new ObjectParameter("clientEmail", clientEmail) :
                new ObjectParameter("clientEmail", typeof(string));
    
            var clientPhoneParameter = clientPhone != null ?
                new ObjectParameter("clientPhone", clientPhone) :
                new ObjectParameter("clientPhone", typeof(string));
    
            var clientAddressParameter = clientAddress != null ?
                new ObjectParameter("clientAddress", clientAddress) :
                new ObjectParameter("clientAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_client_info", clientfNameParameter, clientLnameParameter, clientEmailParameter, clientPhoneParameter, clientAddressParameter);
        }
    
        public virtual int sp_insert_payment_info(Nullable<System.DateTime> paymentDate, Nullable<int> paymentTotal)
        {
            var paymentDateParameter = paymentDate.HasValue ?
                new ObjectParameter("paymentDate", paymentDate) :
                new ObjectParameter("paymentDate", typeof(System.DateTime));
    
            var paymentTotalParameter = paymentTotal.HasValue ?
                new ObjectParameter("paymentTotal", paymentTotal) :
                new ObjectParameter("paymentTotal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_payment_info", paymentDateParameter, paymentTotalParameter);
        }
    
        public virtual int sp_insert_reservation_info(Nullable<System.DateTime> dateIn, Nullable<System.DateTime> dateOut, string reservationStatus)
        {
            var dateInParameter = dateIn.HasValue ?
                new ObjectParameter("dateIn", dateIn) :
                new ObjectParameter("dateIn", typeof(System.DateTime));
    
            var dateOutParameter = dateOut.HasValue ?
                new ObjectParameter("dateOut", dateOut) :
                new ObjectParameter("dateOut", typeof(System.DateTime));
    
            var reservationStatusParameter = reservationStatus != null ?
                new ObjectParameter("reservationStatus", reservationStatus) :
                new ObjectParameter("reservationStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_reservation_info", dateInParameter, dateOutParameter, reservationStatusParameter);
        }
    
        public virtual int sp_insert_room_info(string roomType)
        {
            var roomTypeParameter = roomType != null ?
                new ObjectParameter("roomType", roomType) :
                new ObjectParameter("roomType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_room_info", roomTypeParameter);
        }
    }
}
